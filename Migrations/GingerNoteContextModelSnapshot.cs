// <auto-generated />
using GingerNote.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GingerNote.Migrations
{
    [DbContext(typeof(GingerNoteContext))]
    partial class GingerNoteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GingerNote.Models.Checklist", b =>
                {
                    b.Property<int>("ChecklistId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChecklistName");

                    b.Property<bool>("IsChecked");

                    b.Property<int>("NoteId");

                    b.HasKey("ChecklistId");

                    b.HasIndex("NoteId");

                    b.ToTable("ChecklistT");
                });

            modelBuilder.Entity("GingerNote.Models.GingerNoteC", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NoteBody");

                    b.Property<string>("NoteTitle")
                        .IsRequired();

                    b.Property<bool>("Pinned");

                    b.HasKey("NoteId");

                    b.ToTable("GingerNoteT");
                });

            modelBuilder.Entity("GingerNote.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LabelName");

                    b.Property<int>("NoteId");

                    b.HasKey("LabelId");

                    b.HasIndex("NoteId");

                    b.ToTable("LabelT");
                });

            modelBuilder.Entity("GingerNote.Models.Checklist", b =>
                {
                    b.HasOne("GingerNote.Models.GingerNoteC")
                        .WithMany("NoteChecklist")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GingerNote.Models.Label", b =>
                {
                    b.HasOne("GingerNote.Models.GingerNoteC")
                        .WithMany("NoteLabel")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
