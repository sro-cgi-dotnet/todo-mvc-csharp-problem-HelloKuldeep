swagger: "2.0"
info:
  description: "This is a swagger docs for Ginger 'Note' Api - which can get all GingerNotes by id/title/label/pinned. Post, Put and Delete of Ginger can also be done."
  version: "1.0.0"
  title: "Ginger Note"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "notes@ginger.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "ginger.swagger.io"
basePath: "/api"
tags:
- name: "ginger"
  description: "Everything about your Notes"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /ginger:
    get:
      tags:
      - "ginger"
      summary: "Get all notes from the database"
      operationId: "Get"
      responses:
        200:
          description: "Database returned Notes"
    post:
      tags:
      - "ginger"
      summary: "Add a new note to keep"
      operationId: "Post"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "Note"
        description: "Note object that needs to be added to ginger "
        required: true
        schema:
          $ref: "#/definitions/GingerNote"
      responses:
        201:
          description: "Note successfully created"
        400:
          description: "Note already exists, please try again."
    
  /ginger/{id}:
    get:
      tags:
      - "ginger"
      summary: "Finds Notes by Id"
      operationId: "GetById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Note Id values that need to be considered for filter"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid Id value"
    put:
      tags:
      - "ginger"
      summary: "Update an existing note"
      operationId: "Put"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of the note you want to update"
        type: "integer"
        required: true
      - in: "body"
        name: "Note"
        description: "Note object that needs to be added to TodoApi"
        required: true
        schema:
          $ref: "#/definitions/GingerNote"
      responses:
        400:
          description: "Invalid ID supplied"
        201:
          description: "Note Updated"
    delete:
      tags:
      - "ginger"
      summary: "Deletes a note"
      operationId: "DeleteNote"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Note successfully deleted"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Note not found"
  /ginger/{text}:
    get:
      tags:
      - "ginger"
      summary: "Finds Notes by Title or Label"
      description: "For Title --> type=title , Labels --> query type=label"
      operationId: "GetByTitleOrLabel"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "text"
        in: "path"
        description: "text can be titleName, labelName, true/false for isPinned"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        description: "type can be title, label or pinned"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid type text combination"
definitions:
  GingerNote:
    type: "object"
    required:
    - "NoteId"
    - "Title"
    properties:
      NoteId:
        type: "integer"
        format: "int64"
      NoteTitle:
        type: "string"
        example: "Sample Note Title"
      NoteBody:
        type: "string"
        example: "This is sample for the plaintext field."
      Pinned:
        type: "boolean"
      NoteChecklist:
        type: "array"
        items:
          $ref: "#/definitions/Checklist"
      NoteLabel:
        type: "array"
        items:
          $ref: "#/definitions/Label"
    xml:
      name: "GingerNote"
  Checklist:
    type: "object"
    properties:
      ChecklistId:
        type: "integer"
        format: "int64"
      ChecklistName:
        type: "string"
        example: "Sample Checklist text"
      IsChecked:
        type: "boolean"
      NoteId:
        type: "integer"
        format: "int64"
    xml:
      name: "CheckList"
  Label:
    type: "object"
    required:
    - "Name"
    properties:
      LabelId:
        type: "integer"
        format: "int64"
      LabelName:
        type: "string"
        example: "Sample Label"
      NoteId:
        type: "integer"
    xml:
      name: "Label"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"